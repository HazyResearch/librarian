#!/usr/bin/env bash
# librarian shell
# Usage: librarian [-OPTION] COMMAND [ARG]...
# 
# Global OPTION is one of:
#   -v      increase verbosity
#   -q      suppress all messages
#   -t      force logging to non-ttys
#           (default is to log messages to stderr only when it's a tty)
#
# Generated: 2015-02-12
set -eu

if [ -z "${LIBRARIAN_HOME:-}" ]; then
    export LIBRARIAN_COMMAND=${POJANG_ORIGINAL_COMMAND:-$0}
    unset POJANG_ORIGINAL_COMMAND
    if [ x"$LIBRARIAN_COMMAND" = x"$(type -p "librarian" 2>/dev/null)" ]; then
        # no need to expand command when it's on PATH
        LIBRARIAN_COMMAND=librarian
    else
        # resolve relative path (but no need to follow symlinks)
        LIBRARIAN_COMMAND="$(cd "$(dirname "$LIBRARIAN_COMMAND")"; pwd)/$(basename "$LIBRARIAN_COMMAND")"
    fi
    export USAGE_TOOL_COMMAND=librarian  USAGE_TOOL_PATH=$LIBRARIAN_COMMAND
    Self=$(readlink -f "$0" 2>/dev/null || {
        # XXX readlink -f is only available in GNU coreutils
        cd $(dirname -- "$0")
        n=$(basename -- "$0")
        if [ -L "$n" ]; then
            L=$(readlink "$n")
            if [ x"$L" != x"${L#/}" ]; then
                echo "$L"; exit
            else
                cd "$(dirname -- "$L")"
                n=$(basename -- "$L")
            fi
        fi
        echo "$(pwd -P)/$n"
    })
    Here=$(dirname "$Self")

    # Keep a backup of some environment variables
    for v in PATH NODE_PATH
    do  vbak=LIBRARIAN_ORIG_$v
          declare -p $v    &>/dev/null || continue
        ! declare -p $vbak &>/dev/null || continue
        export "$vbak=${!v}"
    done

    # Setup environment
    unset CDPATH
    export LIBRARIAN_HOME=${Here%/bin}
    #  dependencies
    PATH="$LIBRARIAN_HOME/depends/bundled/.all/bin:$PATH"
    PATH="$LIBRARIAN_HOME/depends/runtime/.all/bin:$PATH"
    #  node_modules
    export NODE_PATH="$LIBRARIAN_HOME/node_modules${NODE_PATH:+:$NODE_PATH}"
    PATH="$LIBRARIAN_HOME/node_modules/.bin:$PATH"
    #  shell runtime scripts
    PATH="$LIBRARIAN_HOME/bin/librarian.d:$PATH"
    export PATH

    # for msg logging
    export SHLVL=0 LIBRARIAN_LOGLVL=${LIBRARIAN_LOGLVL:-1}
    # export LIBRARIAN_LOG_TO_NONTTY=
fi

# make sure everything we need is available
"$LIBRARIAN_HOME"/depends/check-runtime-depends-once


# Process options
while getopts "vtq" opt; do
    case $opt in
        v)
            let ++LIBRARIAN_LOGLVL
            ;;
        q)
            LIBRARIAN_LOGLVL=0
            ;;
        t)
            export LIBRARIAN_LOG_TO_NONTTY=true
            ;;
    esac
done
shift $(($OPTIND - 1))


# Process input arguments
[ $# -gt 0 ] || {
    usage "$0" "No COMMAND given" || true
    # enumerate available COMMANDs discoverable from PATH
    echo
    echo "# Available COMMANDs are:"
    IFS=:
    tmp=$(mktemp -d "${TMPDIR:-/tmp}"/librarian-usage.XXXXXXX)
    trap 'rm -rf "$tmp"' EXIT
    for path in $PATH; do
        for exe in "$path"/librarian-*; do
            [ -x "$exe" ] || continue
            usage "$exe" | head -1 | sed -n '/ -- / s/.* -- //p' >>"$tmp"/desc
            cmd=${exe##*/librarian-}
            echo "librarian $cmd  #"
        done
    done | column -t >"$tmp"/commands
    paste "$tmp"/commands "$tmp"/desc
    false
}
Cmd=$1; shift


# Check if it's a valid command
exe=librarian-"$Cmd"
if type "$exe" &>/dev/null; then
    set -- "$exe" "$@"
else
    usage "$0" "$Cmd: invalid COMMAND"
fi


# Run given command under this environment
exec "$@"
